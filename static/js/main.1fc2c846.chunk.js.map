{"version":3,"sources":["useForm.js","validateInfo.js","components/CreditCardForm.js","App.js","index.js"],"names":["useForm","useState","cardName","cardNumber","cardType","cardExpiration","cardSecurityCode","cardPostalCode","focus","values","setValues","errors","setErrors","handleChange","e","target","name","value","handleFocus","handleSubmit","preventDefault","creditCard","valid","number","expirationDate","cvv","cardholderName","postalCode","show","variant","cname","cnumber","ctype","cexp","ccvv","cpostal","trim","isValid","message","card","type","toUpperCase","validateInfo","CreditCardForm","className","cvc","expiry","focused","Form","onSubmit","Group","Control","id","data-testid","placeholder","onChange","onFocus","Row","Col","Button","size","Alert","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fc2c846.chunk.js","sourcesContent":["import { useState } from 'react'\nimport validateInfo from './validateInfo';\n\nconst useForm = () => {\n    const [values, setValues] = useState({\n        cardName: '',\n        cardNumber: '',\n        cardType: '',\n        cardExpiration: '',\n        cardSecurityCode: '',\n        cardPostalCode: '',\n        focus: ''\n    })\n\n    const [errors, setErrors] = useState({})\n\n    const handleFocus = (e) => {\n        setValues({ \n            ...values,\n            focus: (e.target.name === 'cardSecurityCode') ? 'cvc' : e.target.name\n        });\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        setErrors(validateInfo(values))\n    };\n    \n    return { handleChange, handleFocus, handleSubmit, values, errors };\n};\n\nexport default useForm; ","import valid from \"card-validator\";\n\nexport default function validateInfo(values) {\n  let errors = {};\n  let creditCard = valid.number(values.cardNumber);\n  creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\n  creditCard.cvv = valid.cvv(values.cardSecurityCode);\n  creditCard.cardholderName = valid.cardholderName(values.cardName);\n  creditCard.postalCode = valid.postalCode(values.cardPostalCode);\n\n\n  errors.show = true;\n  errors.variant = \"danger\";\n  errors.cname = false;\n  errors.cnumber = false;\n  errors.ctype = false;\n  errors.cexp = false;\n  errors.ccvv = false;\n  errors.cpostal = false;\n\n  if (values.cardPostalCode === null || !values.cardPostalCode.trim()) {\n    errors.message = \"Credit card postal code is not complete\";\n  } else if (creditCard.postalCode.isValid) {\n    errors.cpostal = true;\n  } else {\n    errors.message = \"Credit card postal code is invalid\";\n  }\n\n  //Card CVV expiration\n  if (values.cardSecurityCode === null || !values.cardSecurityCode.trim()) {\n    errors.message = \"Credit card CVV is not complete\";\n  } else if (creditCard.cvv.isValid) {\n    errors.ccvv = true;\n  } else {\n    errors.message = \"Credit card CVV is invalid\";\n  }\n\n  //Card Expiration Verification\n  if (values.cardExpiration === null || !values.cardExpiration.trim()) {\n    errors.message = \"Credit card expiration date is not complete\";\n  } else if (creditCard.expirationDate.isValid) {\n    errors.cexp = true;\n  } else {\n    errors.message = \"Credit card expiration date is invalid\";\n  }\n\n  //Card Type Verification\n  if (\n    values.cardType === null ||\n    !values.cardType.trim() ||\n    creditCard.card === null\n  ) {\n    errors.message = \"Credit card type is not complete\";\n  } else if (\n    creditCard.card.type &&\n    creditCard.card.type.toUpperCase() === values.cardType.toUpperCase()\n  ) {\n    errors.ctype = true;\n  } else {\n    errors.message = \"Credit card type is invalid\";\n  }\n\n  //Card Number Verification\n  if (values.cardNumber === null || !values.cardNumber.trim()) {\n    errors.message = \"Credit card number is not complete\";\n  } else if (creditCard.isValid) {\n    errors.cnumber = true;\n  } else {\n    errors.message = \"Credit card number is invalid\";\n  }\n\n  //Cardholder Name Verification\n  if (values.cardName === null || !values.cardName.trim()) {\n    errors.message = \"Cardholder name is not complete\";\n  } else if (creditCard.cardholderName.isValid) {\n    errors.cname = true;\n  } else {\n    errors.message = \"Cardholder name is invalid\";\n  }\n\n  if (\n    errors.ctype &&\n    errors.cname &&\n    errors.cnumber &&\n    errors.cexp &&\n    errors.cpostal &&\n    errors.ccvv\n  ) {\n    errors.variant = \"success\";\n    errors.message = \"Credit Card is valid\";\n  }\n\n  return errors;\n}\n","import React from \"react\";\nimport useForm from \"../useForm\";\nimport { Button, Form, Alert, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./CreditCardForm.css\";\nimport Cards from \"react-credit-cards\";\nimport \"react-credit-cards/es/styles-compiled.css\";\n\n\nconst CreditCardForm = () => {\n  const { handleChange, handleFocus, handleSubmit, values, errors } = useForm();\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"box justify-content-center align-items-center\">\n          <div className=\"formDiv\">\n          <div className=\"creditCard\">\n          <Cards\n            cvc={values.cardSecurityCode}\n            expiry={values.cardExpiration}\n            focused={values.focus}\n            name={values.cardName}\n            number={values.cardNumber}\n          />\n          </div>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Control\n                type=\"text\"\n                id=\"cardName\"\n                data-testid=\"cardName\"\n                name=\"cardName\"\n                placeholder=\"Cardholder Name\"\n                value={values.cardName}\n                onChange={handleChange}\n                onFocus={handleFocus}\n                isValid={errors.cname}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"number\"\n                id=\"cardNumber\"\n                data-testid=\"cardNumber\"\n                name=\"cardNumber\"\n                placeholder=\"Card Number\"\n                value={values.cardNumber}\n                onChange={handleChange}\n                onFocus={handleFocus}\n                isValid={errors.cnumber}\n              />\n            </Form.Group>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"cardType\"\n                    id=\"cardType\"\n                    data-testid=\"cardType\"\n                    placeholder=\"Card Type\"\n                    value={values.cardType}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    isValid={errors.ctype}\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    id=\"cardExpiration\"\n                    data-testid=\"cardExpiration\"\n                    name=\"cardExpiration\"\n                    placeholder=\"Expiration Date\"\n                    value={values.cardExpiration}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    isValid={errors.cexp}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Control\n                    type=\"number\"\n                    id=\"cardSecurityCode\"\n                    data-testid=\"cardSecurityCode\"\n                    name=\"cardSecurityCode\"\n                    placeholder=\"Security Code\"\n                    value={values.cardSecurityCode}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    isValid={errors.ccvv}\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    id=\"cardPostalCode\"\n                    data-testid=\"cardPostalCode\"\n                    name=\"cardPostalCode\"\n                    placeholder=\"Postal Code\"\n                    value={values.cardPostalCode}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    isValid={errors.cpostal}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Button\n              size={\"block\"}\n              data-testid=\"validateButton\"\n              id=\"validateButton\"\n              type=\"submit\"\n            >\n              Validate\n            </Button>\n          </Form>\n          </div>\n          <Alert\n            id=\"alertMessage\"\n            data-testid=\"alertMessage\"\n            variant={errors.variant}\n            show={errors.show}\n          >\n            {errors.message}\n          </Alert>{\" \"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreditCardForm;\n","import CreditCardForm from \"./components/CreditCardForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CreditCardForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}